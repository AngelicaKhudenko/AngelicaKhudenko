package home_work_1;

public class Task2 {
    public static void main(String[] args) {
        int a8=8;
        int a2=2; // Объявление переменных для дальнейшего использования пре/пост-унарных операторов

        int example1=5+2/8; // Выполняется деление целых чисел, результат 0. Далее сложение, результат 5
        System.out.println(example1);

        int example2=(5+2)/8; //
        System.out.println(example2); // Сначала действие в скобках, результат 7. Далее деление целых чисел 7/8, результат целове число 0

        int example3=(5+a2++)/8;
        System.out.println(example3);
        /*
            Сначала действия в скобках. Постфиксное увеличение переменной (результат a2=3), сложение 5+2
            Далее деление целых чисел 7/8, результат целое число 0
         */

        a2=2; // В результате действия пост-унарного оператора a2=3. По условию необходимо 2
        int example4=(5+a2++)/--a8;
        System.out.println(example4);
        /*
            Сначала действия в скобках. Постфиксное увеличение переменной (a2=3), сложение 5+2.
            Далее преунарный оператор, a8=7. Далее деление 7/7, результат 1
         */

        a2=2;
        a8=8; // Возвращение необходимых значений переменным после действия пре/пост-унарных операторов
        int example5=(5*2>>a2++)/--a8;
        System.out.println(example5);
        /*
            Сначала действия в скобках. Постунарный оператор (a2=3). Умножение 5*2=10. Побитовый сдвиг вправо на 2 знака, результат 2
            Далее преунарный оператор, a8=7. Далее деление 2/7, результат целое число 0
         */

        a2=2;
        a8=8; // Возвращение необходимых значений переменным после действия пре/пост-унарных операторов
        int example6=(5+7>20?68:22*2>>a2++)/--a8;
        System.out.println(example6);
        /*
            Сначала действия в скобках - тернарный оператор. Так как условие 5+7>20 является ложью, то выполняется второе выражение 22*2>>a2++
            Сначала преунарный оператор, a2++, результат a2=3. Умножение 22*2=44. Побитовый сдвиг вправо на 2 знака, результат 11
            Далее преунарный оператор, a8=7. Далее деление 11/7, результат целое число 1
         */

        a2=2;
        a8=8; // Возвращение необходимых значений переменным после действия пре/пост-унарных операторов
        int example7=(5+7>20?null:(68>=68?22*2>>a2++:null))/--a8;
        System.out.println(example7);
        /*
            Тернарный оператор состоит из трех операндов. Первый операнд - логическое выражение (true/false),
            второй и третий - значения переменных, которые нужно присвоить. В первоначальном условии будет ошибка, так как 68>=68 - логическое значение true
            В преобразованном выражении после раставления скобок: сначала выполняются действия в скобках
            Так как условие 5+7>20 является ложью, выполняются действия третьего операнда, который в себе содержит тернарный оператор
            Так как условие 68>=68 является истиной, выполняются действия второго операнда аналогично предыдущему примеру example 7 - результат 11
            Далее деление 11/7, результат целое число 1
         */

        boolean example8=6-2>3&&12*12<=119; // Сначала по приоритету операций 6-2=4, далее 4>3 - true. Далее 12*12=144, 144<=119 - false. В результате логического И - false
        System.out.println(example8);

        boolean example9=true&&false; // По результатам логического И результатом будет false
        System.out.println(example9);
    }
}
